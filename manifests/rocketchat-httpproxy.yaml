# Q: Why does this exist? 
# R: Coutour can't, for some incomprehensible reason, act normally and just 
# support Websockets like Tr√¶fik (and pretty much everybody else) does. 
# Instead of a normal Ingress, you have to create this HTTPProxy CRD 
# (previously known as IngressRoute). 
# Sources: 
# - https://community.replicated.com/t/websockets-with-replicated-embedded-kubernetes/338
# - https://projectcontour.io/docs/v1.20.1/config/fundamentals/
# --
# Q: What if a non-kURL install has Contour? 
# R: Well... What to say? We will deal with it when the time comes. Ideally, 
# we should've fixed on our Helm charts, but it may unveil new issues. So, 
# it will be done after we fix the most troublesome issues, like kURL being 
# unable to deal with websockets. 

### Monolith version: 
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: rocketchat-ingressroute
  annotations:
    kots.io/when: '{{repl and (ConfigOptionEquals "use_ingress" "1") (IsKurl) (not LicenseFieldValue `microservices`)}}'
spec:
  virtualhost:
    fqdn: "repl{{ LicenseFieldValue `license_url`}}"
    tls: 
      secretName: kotsadm-tls
  routes:
    - services:
        - name: rocketchat-rocketchat
          port: 80
      enableWebsockets: true

### Micro-services version: 
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: rocketchat-ingressroute
  annotations:
    kots.io/when: '{{repl and (ConfigOptionEquals "use_ingress" "1") (IsKurl) (LicenseFieldValue `microservices`)}}'
spec:
  virtualhost:
    fqdn: "repl{{ LicenseFieldValue `license_url`}}"
    tls: 
      secretName: kotsadm-tls
  routes:
    - services:
        - name: rocketchat-rocketchat
          port: 80
    - conditions: 
      - prefix: /sockjs
      enableWebsockets: true
      services:
        - name: rocketchat-ddp-streamer
          port: 3000
    - conditions: 
      - prefix: /websock
      enableWebsockets: true
      services:
        - name: rocketchat-ddp-streamer
          port: 3000