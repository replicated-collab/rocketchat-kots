apiVersion: kots.io/v1beta1
kind: HelmChart
metadata:
  name: rocketchat
spec:
  chart:
    name: rocketchat
    chartVersion: 4.6.0
  values:
    host: "repl{{ LicenseFieldValue `license_url`}}"
    mongodb:
      auth:
        username: rocketchat
        password: "repl{{ ConfigOption `mongo_rocketchat_password`}}"
        database:  rocketchat
        rootPassword: "repl{{ ConfigOption `mongo_root_password`}}"
    license: "repl{{ LicenseFieldValue `rocketchat_enterprise_license`}}"
    registrationToken: "repl{{ LicenseFieldValue `rocketchat_registration_token`}}"
    prometheusScraping:
      enabled: true
  optionalValues:
    - when: '{{repl ConfigOptionEquals "mongo_type" "external_mongodb"}}'
      values: 
        externalMongodbUrl: "repl{{ ConfigOption `mongo_external_url`}}"
        externalMongodbOplogUrl: "repl{{ ConfigOption `mongo_external_oplog_url`}}"
        mongodb: 
          enabled: false
    - when: '{{repl ConfigOptionEquals "mongo_type" "embedded_mongodb"}}'
      values: 
        mongodb:
          auth:
            username: rocketchat
            password: "repl{{ ConfigOption `mongo_rocketchat_password`}}"
            database:  rocketchat
            rootPassword: "repl{{ ConfigOption `mongo_root_password`}}"
    - when: '{{repl ConfigOptionEquals "use_microservices" "1"}}'
      values: 
        microservices: 
          enabled: true
        # Workarround for a strange behaviour, when Âµservices are in use
        # chat deployment crashes due to *something* already up on 9458
        # TODO: investigate this issue
        prometheusScraping: 
          port: 9459
    - when: '{{repl ConfigOptionEquals "use_ingress" "1"}}'
      values: 
        ingress: 
          enabled: true
    - when: '{{repl and (ConfigOptionEquals "use_ingress" "1") (ConfigOptionEquals "use_tls" "1") (not IsKurl)}}'
      values: 
        ingress: 
          enabled: true
          tls: 
            - secretName: rocketchat-tls
              hosts:
                - "repl{{ LicenseFieldValue `license_url`}}"
    # kURL setups have a kotsadm-tls secret, cf.; 
    # https://kots.io/vendor/packaging/using-tls-certs/
    - when: '{{repl and (ConfigOptionEquals "use_ingress" "1") (ConfigOptionEquals "use_tls" "1") (IsKurl) }}'
      values: 
        ingress: 
          enabled: true
          tls: 
            - secretName: kotsadm-tls
              hosts:
                - "repl{{ LicenseFieldValue `license_url`}}" 
    - when: 'repl{{ ConfigOptionEquals "use_ingress" "0" }}'
      values: 
        ingress: 
          enabled: false
        service: 
          type: NodePort
          nodePort: "repl{{ ConfigOption `node_port`}}"

  useHelmInstall: true
