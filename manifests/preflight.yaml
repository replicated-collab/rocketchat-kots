apiVersion: troubleshoot.sh/v1beta2
kind: Preflight
metadata:
  name: rocketchat-preflight-checks
spec:
  collectors: 
    - run:
        collectorName: "test-external-mongo"
        name: mongo
        image: mongo:latest
        namespace: default
        command: ["mongosh"]
        args: [ "repl{{ ConfigOption `mongo_external_url`}}", "--eval", "printjson(db.serverStatus())" ]
        imagePullPolicy: IfNotPresent
        when: '{{repl ConfigOptionEquals "mongo_type" "external_mongodb"}}' 
    - run:
        collectorName: "test-external-mongo-oplog"
        name: mongo
        image: mongo:latest
        namespace: default
        command: ["mongosh"]
        args: [ "repl{{ ConfigOption `mongo_external_oplog_url`}}", "--eval", "printjson(db.serverStatus())" ]
        imagePullPolicy: IfNotPresent
        when: '{{repl ConfigOptionEquals "mongo_type" "external_mongodb"}}'
  analyzers:
    - clusterVersion:
        outcomes:
          - fail:
              when: "< 1.19.0"
              message: The application requires at Kubernetes 1.19.0 or later.
              uri: https://www.kubernetes.io
          - pass:
              message: Your cluster meets the recommended and required versions of Kubernetes.
    - nodeResources:
        checkName: Total CPU cores based on expected usage
        exclude: '{{repl gt (atoi (LicenseFieldValue "number_of_user")) 500 }}'
        outcomes:
          - fail:
              when: "sum(cpuCapacity) < 2"
              message: The cluster must contain at least 2 core
          - pass:
              when: "sum(cpuCapacity) > 1"
              message: The cluster meets the needed CPUs (2+ cores) 
    - nodeResources:
        checkName: Total CPU cores based on expected usage
        exclude: '{{repl or (le (atoi (LicenseFieldValue "number_of_user")) 500) (gt (atoi (LicenseFieldValue "number_of_user")) 1000) }}'
        outcomes:
          - fail:
              when: "sum(cpuCapacity) < 4"
              message: The cluster must contain at least 4 core
          - pass:
              when: "sum(cpuCapacity) > 3"
              message: The cluster meets the needed CPUs (4+ cores)
    - nodeResources:
        checkName: Total CPU cores based on expected usage
        exclude: '{{repl le (atoi (LicenseFieldValue "number_of_user")) 1000 }}'
        outcomes:
          - fail:
              when: "sum(cpuCapacity) < 8"
              message: The cluster must contain at least 8 core
          - pass:
              when: "sum(cpuCapacity) > 7"
              message: The cluster meets the needed CPUs (8+ cores)
    - nodeResources:
        checkName: Every node in the cluster must have at least 1Gi of memory
        outcomes:
          - fail:
              when: "min(memoryCapacity) < 1Gi"
              message: All nodes must have at least 1GB of memory
          - warn:
              when: "min(memoryCapacity) < 2Gi"
              message: It is recommended to have at least 2GB of RAM per node
          - pass:
              message: All nodes have at least 2GB of memory
    - nodeResources:
        checkName: Every node in the cluster must have at least 20GB of disk capacity
        outcomes:
          - fail:
              when: 'min(ephemeralStorageCapacity) < 20Gi'
              message: Every node in the cluster must have at least 20GB of disk capacity
          - warn:
              when: 'min(ephemeralStorageCapacity) < 40Gi'
              message: It is recommended to have at least 40GB of disk capacity on each node in the cluster
          - pass:
              message: All nodes have at least 20GB of disk capacity
    - textAnalyze:
        checkName: Database Connection
        fileName: mongo/test-external-mongo.log
        regex: 'localTime'
        when: '{{repl ConfigOptionEquals "mongo_type" "external_mongodb"}}'
        outcomes:
          - pass:
              when: "true"
              message: "Database is reachable"
          - fail:
              when: "false"
              message: "Can't connect to the database. Check if the connection settings are correct and the server is accepting connections. "
    - textAnalyze:
        checkName: Database Replicaset Connection
        fileName: mongo/test-external-mongo-oplog.log
        regex: 'localTime'
        when: '{{repl ConfigOptionEquals "mongo_type" "external_mongodb"}}'
        outcomes:
          - pass:
              when: "true"
              message: "Replicaset is reachable"
          - fail:
              when: "true"
              message: "Can't connect to the replicaset. Check if connection settings are correct and the server is accepting connections. "
